// Imports
import {FC} from "react";
import Link from "next/link";
import Image from "next/image";
import {motion} from "framer-motion";
import {initialTwo, fadeIn} from "@/animations/animations";

// Components
import {INavbarLinks} from "@/types/Dashboard/components/elements/NavbarLinks";

const NavbarLinks: FC<INavbarLinks> = ({
	path,
	label,
	displayMenuText,
	tailwindStyling,
}) => {
	return (
		<>
			<Link className={tailwindStyling} href={`/dashboard/${path}`}>
				<motion.span
					initial={initialTwo}
					whileInView={fadeIn}
					className={
						displayMenuText ? `flex items-center` : `flex items-center`
					}
				>
					{label === "Documents" ? (
						<svg
							fill="none"
							width="1080"
							height="1080"
							viewBox="0 0 1080 1080"
							xmlns="http://www.w3.org/2000/svg"
							className="w-[20px] h-[20px] text-white"
						>
							<g transform="matrix(54 0 0 54 540 540)">
								<path
									style={{
										stroke: "none",
										strokeWidth: "1",
										strokeDasharray: "none",
										strokeLinecap: "butt",
										strokeDashoffset: "0",
										strokeLinejoin: "miter",
										strokeMiterlimit: "4",
										fill: "rgb(255,255,255)",
										fillRule: "nonzero",
										opacity: "1",
									}}
									transform=" translate(-10.01, -8)"
									d="M 18.9831 6.64169 C 18.9047 6.545 18.8056 6.46712 18.6931 6.41376 C 18.5806 6.36041 18.4576 6.33293 18.3331 6.33335 L 16.6665 6.33335 L 16.6665 5.50002 C 16.6665 4.83698 16.4031 4.20109 15.9342 3.73225 C 15.4654 3.26341 14.8295 3.00002 14.1665 3.00002 L 8.93313 3.00002 L 8.66646 2.16669 C 8.49359 1.67771 8.17292 1.2546 7.74888 0.955986 C 7.32484 0.657367 6.81843 0.498019 6.2998 0.500019 L 3.33313 0.500019 C 2.67009 0.500019 2.0342 0.763411 1.56536 1.23225 C 1.09652 1.70109 0.83313 2.33698 0.83313 3.00002 L 0.83313 13 C 0.83313 13.6631 1.09652 14.2989 1.56536 14.7678 C 2.0342 15.2366 2.67009 15.5 3.33313 15.5 L 15.3331 15.5 C 15.9008 15.4984 16.451 15.3036 16.8933 14.9476 C 17.3355 14.5917 17.6435 14.0959 17.7665 13.5417 L 19.1665 7.35002 C 19.1918 7.22578 19.1885 7.0974 19.1567 6.97466 C 19.1249 6.85191 19.0656 6.73803 18.9831 6.64169 Z M 4.4748 13.1834 C 4.43246 13.3713 4.32629 13.5388 4.17435 13.6574 C 4.02241 13.7759 3.8341 13.8381 3.64146 13.8334 L 3.33313 13.8334 C 3.11212 13.8334 2.90015 13.7456 2.74387 13.5893 C 2.58759 13.433 2.4998 13.221 2.4998 13 L 2.4998 3.00002 C 2.4998 2.779 2.58759 2.56704 2.74387 2.41076 C 2.90015 2.25448 3.11212 2.16669 3.33313 2.16669 L 6.2998 2.16669 C 6.48152 2.1572 6.66135 2.20746 6.81183 2.30978 C 6.9623 2.4121 7.07515 2.56087 7.13313 2.73335 L 7.58313 4.10002 C 7.6366 4.25897 7.7368 4.39809 7.8706 4.49919 C 8.00441 4.60029 8.16561 4.65867 8.33313 4.66669 L 14.1665 4.66669 C 14.3875 4.66669 14.5994 4.75448 14.7557 4.91076 C 14.912 5.06704 14.9998 5.27901 14.9998 5.50002 L 14.9998 6.33335 L 6.66646 6.33335 C 6.47383 6.32864 6.28551 6.39084 6.13358 6.50935 C 5.98164 6.62786 5.87546 6.79537 5.83313 6.98335 L 4.4748 13.1834 Z M 16.1415 13.1834 C 16.0991 13.3713 15.993 13.5388 15.841 13.6574 C 15.6891 13.7759 15.5008 13.8381 15.3081 13.8334 L 6.00813 13.8334 C 6.05117 13.7405 6.08198 13.6425 6.0998 13.5417 L 7.33313 8.00002 L 17.3331 8.00002 L 16.1415 13.1834 Z"
									fill="#ffffff"
									strokeLinecap="round"
								/>
							</g>
						</svg>
					) : label === "Items" ? (
						<svg
							fill="none"
							width="1080"
							height="1080"
							viewBox="0 0 1080 1080"
							xmlns="http://www.w3.org/2000/svg"
							className="w-[20px] h-[20px] text-white"
						>
							<g transform="matrix(60 0 0 60 540 540)">
								<path
									style={{
										stroke: "none",
										strokeWidth: "1",
										strokeDasharray: "none",
										strokeLinecap: "butt",
										strokeDashoffset: "0",
										strokeLinejoin: "miter",
										strokeMiterlimit: "4",
										fill: "rgb(255,255,255)",
										fillRule: "nonzero",
										opacity: "1",
									}}
									transform=" translate(-9, -5)"
									d="M 2.09182 8.575 C 2.01257 8.49913 1.91911 8.43966 1.81682 8.4 C 1.61394 8.31665 1.38637 8.31665 1.18349 8.4 C 1.08119 8.43966 0.98774 8.49913 0.908486 8.575 C 0.832619 8.65425 0.773148 8.74771 0.733486 8.85 C 0.66967 9.00176 0.652235 9.16902 0.68338 9.33068 C 0.714525 9.49234 0.792855 9.64115 0.908486 9.75833 C 0.989487 9.83194 1.0825 9.89113 1.18349 9.93333 C 1.28324 9.97742 1.39109 10.0002 1.50015 10.0002 C 1.60921 10.0002 1.71707 9.97742 1.81682 9.93333 C 1.91781 9.89113 2.01082 9.83194 2.09182 9.75833 C 2.20745 9.64115 2.28578 9.49234 2.31693 9.33068 C 2.34807 9.16902 2.33064 9.00176 2.26682 8.85 C 2.22716 8.74771 2.16769 8.65425 2.09182 8.575 Z M 4.83349 1.66667 L 16.5002 1.66667 C 16.7212 1.66667 16.9331 1.57887 17.0894 1.42259 C 17.2457 1.26631 17.3335 1.05435 17.3335 0.833333 C 17.3335 0.61232 17.2457 0.400358 17.0894 0.244078 C 16.9331 0.0877975 16.7212 0 16.5002 0 L 4.83349 0 C 4.61247 0 4.40051 0.0877975 4.24423 0.244078 C 4.08795 0.400358 4.00015 0.61232 4.00015 0.833333 C 4.00015 1.05435 4.08795 1.26631 4.24423 1.42259 C 4.40051 1.57887 4.61247 1.66667 4.83349 1.66667 Z M 2.09182 4.40833 C 1.97463 4.2927 1.82582 4.21437 1.66416 4.18323 C 1.50251 4.15208 1.33525 4.16952 1.18349 4.23333 C 1.0825 4.27554 0.989487 4.33472 0.908486 4.40833 C 0.832619 4.48759 0.773148 4.58104 0.733486 4.68333 C 0.689399 4.78308 0.666626 4.89094 0.666626 5 C 0.666626 5.10906 0.689399 5.21692 0.733486 5.31667 C 0.775688 5.41765 0.834877 5.51067 0.908486 5.59167 C 0.989487 5.66528 1.0825 5.72447 1.18349 5.76667 C 1.28324 5.81075 1.39109 5.83353 1.50015 5.83353 C 1.60921 5.83353 1.71707 5.81075 1.81682 5.76667 C 1.91781 5.72447 2.01082 5.66528 2.09182 5.59167 C 2.16543 5.51067 2.22462 5.41765 2.26682 5.31667 C 2.31091 5.21692 2.33368 5.10906 2.33368 5 C 2.33368 4.89094 2.31091 4.78308 2.26682 4.68333 C 2.22716 4.58104 2.16769 4.48759 2.09182 4.40833 Z M 16.5002 4.16667 L 4.83349 4.16667 C 4.61247 4.16667 4.40051 4.25446 4.24423 4.41074 C 4.08795 4.56703 4.00015 4.77899 4.00015 5 C 4.00015 5.22101 4.08795 5.43298 4.24423 5.58926 C 4.40051 5.74554 4.61247 5.83333 4.83349 5.83333 L 16.5002 5.83333 C 16.7212 5.83333 16.9331 5.74554 17.0894 5.58926 C 17.2457 5.43298 17.3335 5.22101 17.3335 5 C 17.3335 4.77899 17.2457 4.56703 17.0894 4.41074 C 16.9331 4.25446 16.7212 4.16667 16.5002 4.16667 Z M 2.09182 0.241667 C 2.01257 0.165799 1.91911 0.106329 1.81682 0.0666666 C 1.66506 0.00285041 1.4978 -0.0145849 1.33614 0.0165602 C 1.17448 0.0477053 1.02567 0.126035 0.908486 0.241667 C 0.834877 0.322667 0.775688 0.415679 0.733486 0.516667 C 0.689399 0.616417 0.666626 0.724274 0.666626 0.833333 C 0.666626 0.942392 0.689399 1.05025 0.733486 1.15 C 0.775688 1.25099 0.834877 1.344 0.908486 1.425 C 0.989487 1.49861 1.0825 1.5578 1.18349 1.6 C 1.33525 1.66382 1.50251 1.68125 1.66416 1.65011 C 1.82582 1.61896 1.97463 1.54063 2.09182 1.425 C 2.16543 1.344 2.22462 1.25099 2.26682 1.15 C 2.31091 1.05025 2.33368 0.942392 2.33368 0.833333 C 2.33368 0.724274 2.31091 0.616417 2.26682 0.516667 C 2.22462 0.415679 2.16543 0.322667 2.09182 0.241667 Z M 16.5002 8.33333 L 4.83349 8.33333 C 4.61247 8.33333 4.40051 8.42113 4.24423 8.57741 C 4.08795 8.73369 4.00015 8.94565 4.00015 9.16667 C 4.00015 9.38768 4.08795 9.59964 4.24423 9.75592 C 4.40051 9.9122 4.61247 10 4.83349 10 L 16.5002 10 C 16.7212 10 16.9331 9.9122 17.0894 9.75592 C 17.2457 9.59964 17.3335 9.38768 17.3335 9.16667 C 17.3335 8.94565 17.2457 8.73369 17.0894 8.57741 C 16.9331 8.42113 16.7212 8.33333 16.5002 8.33333 Z"
									fill="#ffffff"
									strokeLinecap="round"
								/>
							</g>
						</svg>
					) : label === "Categories" ? (
						<svg
							fill="none"
							width="1080"
							height="1080"
							viewBox="0 0 1080 1080"
							xmlns="http://www.w3.org/2000/svg"
							className="w-[20px] h-[20px] text-white"
						>
							<g transform="matrix(60 0 0 60 540 540)">
								<path
									style={{
										stroke: "none",
										strokeWidth: "1",
										strokeDasharray: "none",
										strokeLinecap: "butt",
										strokeDashoffset: "0",
										strokeLinejoin: "miter",
										strokeMiterlimit: "4",
										fill: "rgb(255,255,255)",
										fillRule: "nonzero",
										opacity: "1",
									}}
									transform=" translate(-10, -9.99)"
									d="M 17.6416 1.71669 C 17.0442 1.6138 16.4394 1.56084 15.8332 1.55835 C 13.7652 1.55666 11.7403 2.14966 9.99991 3.26669 C 8.25503 2.16433 6.23045 1.58588 4.16657 1.60002 C 3.56045 1.6025 2.95558 1.65546 2.35824 1.75835 C 2.16258 1.79209 1.98539 1.89457 1.85859 2.04735 C 1.73178 2.20013 1.66369 2.39316 1.66657 2.59169 L 1.66657 12.5917 C 1.66479 12.7141 1.69001 12.8355 1.74045 12.9471 C 1.79089 13.0586 1.8653 13.1577 1.95839 13.2373 C 2.05147 13.3169 2.16096 13.3749 2.27904 13.4074 C 2.39712 13.4398 2.5209 13.4459 2.64157 13.425 C 3.83576 13.2183 5.05924 13.2526 6.23996 13.5259 C 7.42068 13.7993 8.53476 14.3061 9.51657 15.0167 L 9.61657 15.075 L 9.70824 15.075 C 9.80066 15.1135 9.89979 15.1334 9.99991 15.1334 C 10.1 15.1334 10.1992 15.1135 10.2916 15.075 L 10.3832 15.075 L 10.4832 15.0167 C 11.4582 14.2903 12.5691 13.767 13.75 13.4778 C 14.931 13.1887 16.158 13.1395 17.3582 13.3334 C 17.4789 13.3542 17.6027 13.3482 17.7208 13.3157 C 17.8389 13.2833 17.9483 13.2252 18.0414 13.1456 C 18.1345 13.0661 18.2089 12.967 18.2594 12.8554 C 18.3098 12.7438 18.335 12.6225 18.3332 12.5 L 18.3332 2.50002 C 18.3246 2.31015 18.2512 2.12895 18.1254 1.98647 C 17.9996 1.84399 17.8289 1.7488 17.6416 1.71669 Z M 9.16657 12.7917 C 7.62481 11.9806 5.90867 11.5573 4.16657 11.5584 C 3.89157 11.5584 3.61657 11.5584 3.33324 11.5584 L 3.33324 3.22502 C 3.61079 3.20902 3.88903 3.20902 4.16657 3.22502 C 5.9444 3.22306 7.68342 3.74476 9.16657 4.72502 L 9.16657 12.7917 Z M 16.6666 11.5917 C 16.3832 11.5917 16.1082 11.5917 15.8332 11.5917 C 14.0911 11.5906 12.375 12.0139 10.8332 12.825 L 10.8332 4.72502 C 12.3164 3.74476 14.0554 3.22306 15.8332 3.22502 C 16.1108 3.20902 16.389 3.20902 16.6666 3.22502 L 16.6666 11.5917 Z M 17.6416 15.05 C 17.0442 14.9471 16.4394 14.8942 15.8332 14.8917 C 13.7652 14.89 11.7403 15.483 9.99991 16.6 C 8.2595 15.483 6.2346 14.89 4.16657 14.8917 C 3.56045 14.8942 2.95558 14.9471 2.35824 15.05 C 2.24976 15.0672 2.14576 15.1057 2.05221 15.1633 C 1.95866 15.2208 1.87741 15.2963 1.81313 15.3854 C 1.74885 15.4744 1.70281 15.5753 1.67766 15.6822 C 1.65251 15.7891 1.64874 15.9 1.66657 16.0084 C 1.70892 16.2248 1.83532 16.4156 2.01807 16.539 C 2.20082 16.6623 2.42502 16.7083 2.64157 16.6667 C 3.83576 16.4599 5.05924 16.4942 6.23996 16.7676 C 7.42068 17.0409 8.53476 17.5478 9.51657 18.2584 C 9.65771 18.3588 9.82665 18.4128 9.99991 18.4128 C 10.1732 18.4128 10.3421 18.3588 10.4832 18.2584 C 11.4651 17.5478 12.5791 17.0409 13.7599 16.7676 C 14.9406 16.4942 16.1641 16.4599 17.3582 16.6667 C 17.5748 16.7083 17.799 16.6623 17.9817 16.539 C 18.1645 16.4156 18.2909 16.2248 18.3332 16.0084 C 18.3511 15.9 18.3473 15.7891 18.3222 15.6822 C 18.297 15.5753 18.251 15.4744 18.1867 15.3854 C 18.1224 15.2963 18.0412 15.2208 17.9476 15.1633 C 17.8541 15.1057 17.7501 15.0672 17.6416 15.05 Z"
									fill="#ffffff"
									strokeLinecap="round"
								/>
							</g>
						</svg>
					) : (
						<></>
					)}
				</motion.span>
				<motion.span
					initial={initialTwo}
					whileInView={fadeIn}
					viewport={{once: true}}
					className={displayMenuText ? `block` : `hidden`}
				>
					{label}
				</motion.span>
			</Link>
		</>
	);
};

export default NavbarLinks;
