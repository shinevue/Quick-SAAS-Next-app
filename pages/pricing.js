/* eslint-disable @next/next/no-sync-scripts */
/* eslint-disable @next/next/no-img-element */
import Head from "next/head";
import {gql} from "@apollo/client";
import {client} from "../lib/apollo";

// Components
import Footer from "../components/Footer";
import Navbar from "../components/Navbar";
import HeroTwo from "../components/HeroTwo";
import JumboGrid from "../components/JumboGrid";

// Styling
import styles from "../styles/Home.module.scss";
import PricingOptions from "../components/PricingOptions";

const pricingPage = ({pricingPageContent, pageTitle}) => {
	return (
		<>
			<Head>
				{/* <title>{featurePageContent.featurePage}</title> */}
				<title>{pageTitle} | Inventory Management Software</title>
				<meta name="description" content="Generated by create next app" />
				{/* <!-- Website Icon --> */}
				<link rel="icon" href="/img/Logos/BlueInventory favicon Two.png" />
			</Head>

			<main className={styles.main}>
				{/* Hero Section */}
				<HeroTwo
					title={pricingPageContent?.heroSection?.title}
					subtitle={pricingPageContent?.heroSection?.subtitle}
					backgroundImage={
						pricingPageContent?.heroSection?.backgroundImage?.sourceUrl
					}
				/>

				{/* Pricing Options Section */}
				<PricingOptions />

				{/* Jumbo Section */}
				<JumboGrid />
			</main>
		</>
	);
};

export default pricingPage;

// Removes Global Navbar & Adds Custom Header and Footer Page layout Function
pricingPage.getLayout = function PageLayout(page) {
	return (
		<>
			{/* <!--===== NAVBAR =====--> */}
			<Navbar />

			{/* <!--===== PAGE CONTENT =====--> */}
			{page}

			{/* <!--===== FOOTER =====--> */}
			<Footer />
		</>
	);
};

export async function getStaticProps() {
	const getPricingPageTitle = gql`
		{
			pages(where: {id: 251}) {
				edges {
					node {
						title
					}
				}
			}
		}
	`;

	const getPricingPageContent = gql`
		{
			pages(where: {id: 251}) {
				edges {
					node {
						pricingPage {
							heroSection {
								title
								subtitle
								backgroundImage {
									sourceUrl
								}
							}
						}
					}
				}
			}
		}
	`;

	const responseTitle = await client.query({
		query: getPricingPageTitle,
	});

	const response = await client.query({
		query: getPricingPageContent,
	});

	return {
		props: {
			pricingPageContent: response.data?.pages?.edges[0]?.node?.pricingPage,
			pageTitle: responseTitle.data?.pages?.edges[0]?.node?.title,
		},
	};
}
