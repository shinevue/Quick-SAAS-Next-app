/* eslint-disable @next/next/no-sync-scripts */
/* eslint-disable @next/next/no-img-element */
import Head from "next/head";
import {gql} from "@apollo/client";
import {client} from "../lib/apollo";

// Components
import Stats from "../components/stats";
import Footer from "../components/Footer";
import Navbar from "../components/Navbar";
import CTATwo from "../components/CTATwo";
import HeroTwo from "../components/HeroTwo";
import CardGrid from "../components/CardGrid";
import JumboGrid from "../components/jumboGrid";
import FeaturesBanner from "../components/FeaturesBanner";

// Styling
import styles from "../styles/Home.module.scss";
import ThreeContentGrid from "../components/ThreeContentGrid";

export default function FeaturesPage({featurePageContent, pageTitle}) {
	// console.log(featurePageContent);
	return (
		<>
			<Head>
				{/* <title>{featurePageContent.featurePage}</title> */}
				<title>{pageTitle} | Inventory Management Software</title>
				<meta name="description" content="Generated by create next app" />
				{/* <!-- Website Icon --> */}
				<link rel="icon" href="/img/Logos/BlueInventory favicon Two.png" />
			</Head>

			<main className={styles.main}>
				{/* Hero Section */}
				<HeroTwo
					title={featurePageContent?.heroSection?.title}
					subtitle={featurePageContent?.heroSection?.subtitle}
					backgroundImage={
						featurePageContent?.heroSection?.backgroundImage?.sourceUrl
					}
				/>

				{/* Stats */}
				<Stats
					title={featurePageContent?.stats?.title}
					subtitle={featurePageContent?.stats?.subtitle}
					beforeTopText={featurePageContent?.stats?.beforeTopText}
					beforeNumber={featurePageContent?.stats?.beforeNumber}
					beforeBottomText={featurePageContent?.stats?.beforeBottomText}
					afterTopText={featurePageContent?.stats?.afterTopText}
					afterNumber={featurePageContent?.stats?.afterNumber}
					afterBottomText={featurePageContent?.stats?.afterBottomText}
				/>

				{/* Feature Banner Section */}
				<FeaturesBanner
					iconOne={featurePageContent?.featuresBanner[0]?.icons}
					textOne={featurePageContent?.featuresBanner[0]?.text}
					iconTwo={featurePageContent?.featuresBanner[1]?.icons}
					textTwo={featurePageContent?.featuresBanner[1]?.text}
					iconThree={featurePageContent?.featuresBanner[2]?.icons}
					textThree={featurePageContent?.featuresBanner[2]?.text}
				/>

				{/* Three Grid Content */}
				<ThreeContentGrid
					title={featurePageContent?.threeGridContent?.title}
					paragraph={featurePageContent?.threeGridContent?.paragraph}
					gridContent={featurePageContent?.threeGridContent?.gridContent}
					buttonLink={featurePageContent?.threeGridContent?.buttonLink}
				/>

				{/*  */}
				<CardGrid
					title={featurePageContent?.featureList?.title}
					gridContent={featurePageContent?.featureList?.gridContent}
				/>

				{/* How It Works */}
				<JumboGrid />
				{/* <HowItWorks title={howItWorks} data={howItWorks} /> */}

				{/* CTA Two */}
				<CTATwo
					title={featurePageContent?.ctaBannerTwo?.title}
					paragraph={featurePageContent?.ctaBannerTwo?.paragraph}
					button={featurePageContent?.ctaBannerTwo?.buttonLink}
				/>
			</main>
		</>
	);
}

// Removes Global Navbar & Adds Custom Header and Footer Page layout Function
FeaturesPage.getLayout = function PageLayout(page) {
	return (
		<>
			{/* <!--===== NAVBAR =====--> */}
			<Navbar />

			{/* <!--===== PAGE CONTENT =====--> */}
			{page}

			{/* <!--===== FOOTER =====--> */}
			<Footer />
		</>
	);
};

export async function getStaticProps() {
	const getFeaturePageTitle = gql`
		{
			pages(where: {id: 121}) {
				edges {
					node {
						title
					}
				}
			}
		}
	`;

	const getFeaturePageContent = gql`
		{
			pages(where: {id: 121}) {
				edges {
					node {
						featuresPage {
							heroSection {
								title
								subtitle
								backgroundImage {
									sourceUrl
								}
							}
							featuresBanner {
								text
								icons {
									sourceUrl
								}
							}
							ctaBannerTwo {
								title
								paragraph
								buttonLink {
									url
									title
									target
								}
							}
							stats {
								title
								subtitle
								beforeTopText
								beforeNumber
								beforeBottomText
								afterTopText
								afterNumber
								afterBottomText
							}
							threeGridContent {
								title
								paragraph
								buttonLink {
									url
									title
									target
								}
								gridContent {
									title
									paragraph
									icon {
										sourceUrl
									}
								}
							}
							featureList {
								title
								gridContent {
									title
									paragraph
								}
							}
						}
					}
				}
			}
		}
	`;

	const responseTitle = await client.query({
		query: getFeaturePageTitle,
	});

	const response = await client.query({
		query: getFeaturePageContent,
	});

	return {
		props: {
			featurePageContent: response.data?.pages?.edges[0]?.node?.featuresPage,
			pageTitle: responseTitle.data?.pages?.edges[0]?.node?.title,
		},
	};
}
