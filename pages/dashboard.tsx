// Import
import {FC} from "react";
import Link from "next/link";
import Head from "next/head";
import {motion} from "framer-motion";
import {GetServerSideProps} from "next";
import {UserButton} from "@clerk/nextjs";
import {fadeInUp, stagger} from "../animations/animations";
import {getThemesOptionsContent} from "../functions/themesOptions";
import {clerkClient, getAuth, buildClerkProps} from "@clerk/nextjs/server";
import {
	getFooterMenuLinks,
	getIndustriesMenuLinks,
} from "../functions/MenuLinks";

// Components
import Footer from "../components/Footer";

interface IDashboard {
	id: string;
	lastName: string;
	firstName: string;
	userContent: string;
	emailAddress: string;
	profileImageUrl: string;
	footerMenuLinks: {
		footerMenuLinks: [
			{
				node: {
					id: string;
					url: string;
					label: string;
				};
			}
		];
	};
	industriesMenuLinks: {
		industriesMenuLinks: [
			{
				node: {
					id: string;
					url: string;
					label: string;
				};
			}
		];
	};
	themesOptionsContent: {
		email: string;
		emailTwo: string;
		phoneNumber: string;
		phoneNumberTwo: string;
		twitterLink: string;
		facebookLink: string;
		linkedinLink: string;
		copyRightText: string;
	};
}

const dashboard: FC<IDashboard> = ({
	id,
	lastName,
	firstName,
	emailAddress,
	userContent,
	profileImageUrl,
	footerMenuLinks,
	industriesMenuLinks,
	themesOptionsContent,
}) => {
	return (
		<motion.div
			exit={{
				opacity: 0,
			}}
			initial="initial"
			animate="animate"
			className="min-h-screen bg-white bg-center bg-no-repeat bg-cover"
			style={{
				backgroundImage: `url("/svg/backgroundSVG/stacked-waves-haikei-orange-yellow.svg")`,
			}}
		>
			<Head>
				<title>{`${firstName} ${lastName}`} | Dashboard</title>
				<meta name="description" content="Generated by create next app" />
				<link
					rel="icon"
					href={
						profileImageUrl
							? profileImageUrl
							: `/img/Logos/BlueInventory favicon Two.png`
					}
				/>
			</Head>

			<div className="w-full gap-4 p-4 bg-white">
				<div className="flex items-center justify-between gap-4 px-0 mx-auto containers">
					<div className="flex flex-col">
						<Link href="/" className="text-xl text-darkBlue font-[900]">
							BlueInventory
						</Link>
					</div>
					<UserButton />
				</div>
			</div>

			<section className="container flex flex-col items-center justify-center h-screen px-4 py-10 mx-auto overflow-hidden text-left lg:pt-36 xxl:pt-24"></section>

			<Footer
				email={themesOptionsContent?.email}
				emailTwo={themesOptionsContent?.emailTwo}
				phoneNumber={themesOptionsContent?.phoneNumber}
				twitterLink={themesOptionsContent?.twitterLink}
				facebookLink={themesOptionsContent?.facebookLink}
				linkedinLink={themesOptionsContent?.linkedinLink}
				footerMenuLinks={footerMenuLinks?.footerMenuLinks}
				copyRightText={themesOptionsContent?.copyRightText}
				phoneNumberTwo={themesOptionsContent?.phoneNumberTwo}
				industriesMenuLinks={industriesMenuLinks?.industriesMenuLinks}
			/>
		</motion.div>
	);
};

export default dashboard;

export const getServerSideProps: GetServerSideProps = async (ctx) => {
	const {userId} = getAuth(ctx.req);

	const user = userId ? await clerkClient.users.getUser(userId) : undefined;

	const userResponse = {
		id: user?.id,
		firstName: user?.firstName,
		lastName: user?.lastName,
		profileImageUrl: user?.profileImageUrl,
		emailAddress: user?.emailAddresses[0]?.emailAddress,
	};

	const footerMenuLinks: object = await getFooterMenuLinks();
	const industriesMenuLinks: object = await getIndustriesMenuLinks();
	const themesOptionsContent: object = await getThemesOptionsContent();

	const props = {
		footerMenuLinks,
		industriesMenuLinks,
		themesOptionsContent,
		id: userResponse?.id,
		lastName: userResponse?.lastName,
		firstName: userResponse?.firstName,
		emailAddress: userResponse?.emailAddress,
		profileImageUrl: userResponse?.profileImageUrl,
		userContent: JSON.stringify({...buildClerkProps(ctx.req, {user})}),
	};

	return {
		props,
	};
};
